package main

import "fmt"

func main() {

	value := 0
	firstValueFound := false

	for {
		exampleDatas := []interface{}{1, "X", 8, 17, "Y", "Z", 78, 113}
		var diffLayer1, diffLayer2 []int
		fmt.Println("value::", value)
		for index, exampleData := range exampleDatas {
			fmt.Println("index:", index)
			fmt.Println("exampleData:", exampleData)
			if index != 0 {
				switch exampleData.(type) {
				case string:
					exampleData = value
					exampleDatas[index] = exampleData
				}
				fmt.Printf("exampleData.(int)-exampleDatas[index-1].(int): %d%s%d\n", exampleData.(int), " - ", exampleDatas[index-1].(int))
				diffLayer1 = append(diffLayer1, exampleData.(int)-exampleDatas[index-1].(int))
				fmt.Println("diffLayer1:", diffLayer1)
				if len(diffLayer1) >= 2 {
					diffLayer2 = append(diffLayer2, diffLayer1[len(diffLayer1)-1]-diffLayer1[len(diffLayer1)-2])
					if len(diffLayer2) >= 2 {
						if diffLayer2[len(diffLayer2)-1]-diffLayer2[len(diffLayer2)-2] != 1 {
							firstValueFound = false
							break
						} else {
							exampleDatas[index] = exampleData
							fmt.Println("found data")
							firstValueFound = true
							// continue
							break
						}
					}
				}
			}
		}
		value++
		if value > 35 {
			fmt.Println("exampleDatas:", exampleDatas)
			break
		}
		if firstValueFound {
			// indexCurrent = len(diffLayer1) + 1
			fmt.Println("success!!!!")
			fmt.Println("exampleDatas:", exampleDatas)
			fmt.Println("diffLayer1:", diffLayer1)
			fmt.Println("diffLayer2:", diffLayer2)
			// for _, v := range v {

			// }
			break
		}
		fmt.Println("===================================================================")
	}
}
